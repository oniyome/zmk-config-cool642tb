#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <20 19>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <5>;
        };

        Win {
            bindings = <&kp LWIN>;
            key-positions = <10 11>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        obs_fix: obs_fix {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp ESC &kp ESC &kp DOWN &kp HOME>;
            label = "OBS_FIX";
        };

        obs_space: obs_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp I &kp SPACE &kp ESC>;
            label = "OBS_SPACE";
        };

        toka: toka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp O &kp K &kp A &kp UNDER &kp N0 &kp N0 &kp N9 &kp N2 &kp N1 &kp ENTER>;
            label = "TOKA";
        };

        telegram: telegram {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LWIN &kp T &kp E &kp L &kp E &kp G &kp R &kp A &kp M &kp ENTER>;
            label = "TELEGRAM";
        };

        skype: skype {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LWIN &kp S &kp K &kp Y &kp P &kp E &kp ENTER>;
            label = "SKYPE";
        };

        wechat: wechat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LWIN &kp W &kp E &kp C &kp H &kp A &kp T &kp ENTER>;
            label = "WECHAT";
        };

        obs_insert: obs_insert {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp ESC &kp A &kp LC(SPACE)>;
            label = "OBS_INSERT";
        };

        gmail_clear: gmail_clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp ESC &kp G &kp I &kp G &kp I>;
            label = "GMAIL_CLEAR";
        };

        obs_next_line: obs_next_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp I &kp ENTER &kp ESC &kp UP &kp END>;
            label = "OBS_NEXT_LINE";
        };

        snippet: snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LWIN &kp S &kp N &kp I &kp P &kp P &kp E &kp T &kp RET>;
            label = "SNIPPET";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                  &kp W        &kp E        &kp R         &kp T                                   &kp Y        &kp U  &kp I      &kp O       &kp P
&mt LSHFT A            &kp S        &kp D        &kp F         &kp G            &mkp MB3   &tog 2      &kp H        &kp J  &kp K      &kp L       &mt LSHFT MINUS
&mt LC(Z) Z            &mt LC(X) X  &mt LC(C) C  &mt LC(V) V   &kp B            &mkp MB1   &mkp MB2    &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt LS(SLASH) SLASH
&mt LA(SPACE) LA(TAB)  &trans       &trans       &mt LALT ESC  &mt LCTRL ENTER  &lt 1 DEL  &lt 2 BSPC  &lt 3 SPACE                                &mt LWIN TAB
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        Number {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR            &kp PERCENT                                     &kp EQUAL            &mt LS(N7) N7  &mt LS(N8) N8  &mt LS(N9) N9  &kp PLUS
&kp F2           &kp F4        &kp F6        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &trans       &mt SEMICOLON COLON  &mt LS(N4) N4  &mt LS(N5) N5  &mt LS(N6) N6  &kp MINUS
&kp LC(F6)       &trans        &kp LS(F10)   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &bt BT_CLR  &trans       &kp N0               &mt LS(N1) N1  &mt LS(N2) N2  &mt LS(N3) N3  &kp ASTERISK
&bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4           &trans      &obs_insert  &obs_space                                                        &bt BT_CLR
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        move {
            bindings = <
&kp CARET      &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP                                   &kp LA(LEFT)  &gmail_clear  &kp K_APPLICATION  &kp TILDE      &kp LA(RIGHT)
&kp LC(GRAVE)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(N1)      &trans         &trans          &kp LEFT      &kp DOWN      &kp UP             &kp RIGHT      &obs_fix
&kp BACKSLASH  &mt SQT DQT     &mkp MB3        &obs_fix         &msc SCRL_DOWN  &trans         &obs_next_line  &kp HOME      &kp END       &kp PAGE_UP        &kp PAGE_DOWN  &kp LC(SEMICOLON)
&trans         &trans          &trans          &trans           &kp LA(ENTER)   &kp LC(ENTER)  &trans          &trans                                                        &tog 2
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Function {
            bindings = <
&kp LC(LS(S))  &kp LC(LS(TAB))  &kp LC(TAB)        &kp LC(LS(A))  &kp LC(LS(T))                          &kp LC(N9)  &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)
&trans         &kp LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kp LC(LS(D))  &kp LC(LS(BACKSLASH))  &trans  &trans  &trans      &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)
&trans         &kp LA(UP)       &kp LA(DOWN)       &kp F10        &trans                 &trans  &trans  &snippet    &obs_fix    &skype      &wechat     &toka
&trans         &trans           &trans             &trans         &trans                 &trans  &trans  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp CARET      &mkp MB1        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP                           &trans    &trans   &trans       &trans         &kp LA(RIGHT)
&kp LC(GRAVE)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(N1)      &trans         &trans  &trans    &trans   &trans       &trans         &obs_next_line
&kp BACKSLASH  &mt SQT DQT     &mkp MB3        &trans           &msc SCRL_DOWN  &trans         &trans  &kp HOME  &kp END  &kp PAGE_UP  &kp PAGE_DOWN  &kp LC(SEMICOLON)
&trans         &trans          &trans          &trans           &kp LA(ENTER)   &kp LC(ENTER)  &trans  &trans                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        SCROLL {
            bindings = <
&kp F1       &kp F2   &kp F3             &kp F4         &kp F5                                                  &kp Y          &kp U           &kp I           &kp O            &kp P
&kp AT_SIGN  &kp SQT  &kp DOUBLE_QUOTES  &kp SEMICOLON  &kp COLON     &kp N1          &kp INT_KATAKANAHIRAGANA  &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW    &kp RIGHT        &kp ENTER
&kp Z        &kp X    &kp C              &kp V          &kp B         &kp LEFT_BRACE  &kp RIGHT_BRACE           &kp LC(SPACE)  &kp RG(SPACE)   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH
&kp RSHIFT   &kp TAB  &kp LCTRL          &kp RGUI       &kp LEFT_ALT  &kp UNDERSCORE  &none                     &lt 5 SPACE                                                     &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &trans       &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &trans  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 5 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
